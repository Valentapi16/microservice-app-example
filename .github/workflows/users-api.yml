name: CI/CD - users-api
on:
  push:
    branches: [ "master", "dev" ]
    paths:
      - "users-api/**"
  pull_request:
    branches: [ "master", "dev" ]
    paths:
      - "users-api/**"

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('users-api/pom.xml') }}
      
      - name: Build JAR with Maven
        working-directory: ./users-api
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw clean package -DskipTests
          else
            mvn clean package -DskipTests
          fi
      
      - name: Run tests
        working-directory: ./users-api
        run: |
          if [ -f "./mvnw" ]; then
            ./mvnw test
          else
            mvn test
          fi
      
      - name: Build Docker image
        run: docker build -t users-api:${{ github.sha }} ./users-api

  deploy:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      
      - name: Deploy to VM
        run: |
          sshpass -p "${{ secrets.VM_PASSWORD_KEY }}" ssh -o StrictHostKeyChecking=no azureuser@${{ secrets.VM_IP_KEY }} "
            cd /opt/microservice-app-example &&
            git pull origin master &&
            docker-compose build users-api &&
            docker-compose up -d users-api
          "
