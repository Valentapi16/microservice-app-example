name: Todos API CI/CD - Azure Container Apps
on:
  push:
    branches: [ master, main, dev, infra/feature/terraform-infra-implementation, feature/* ]
    paths: [ 'todos-api/**' ]
  pull_request:
    branches: [ master, main, dev ]
    paths: [ 'todos-api/**' ]

env:
  REGISTRY: acrmicroserviceappdeva6b3d4b9.azurecr.io
  IMAGE_NAME: todos-api
  RESOURCE_GROUP: rg-microservice-dev
  CONTAINER_APP: ca-todos-api-dev
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: todos-api/package.json
      
      - name: Install dependencies
        run: cd todos-api && npm ci
      
      - name: Run tests
        run: cd todos-api && npm test || echo "No tests found, skipping"
      
      - name: Build Docker image (test)
        run: docker build -t todos-api:test ./todos-api
  
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.ref == 'refs/heads/infra/feature/terraform-infra-implementation'
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Log in to Azure Container Registry
        run: az acr login --name acrmicroserviceappdeva6b3d4b9
      
      - name: Build and push Docker image
        run: |
          cd todos-api
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          
          # Also tag as latest
          docker tag $IMAGE_TAG ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      - name: Deploy to Azure Container Apps
        run: |
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          az containerapp update \
            --name ${{ env.CONTAINER_APP }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image $IMAGE_TAG

