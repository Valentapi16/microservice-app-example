name: Log Message Processor CI/CD - Azure Container Apps

on:
  push:
    branches:
      - master
      - main
      - dev
      - feature/modernize-legacy-pipelines
    paths:
      - 'log-message-processor/**'

env:
  REGISTRY: acrmicroserviceappdeva6b3d4b9.azurecr.io
  IMAGE_NAME: log-message-processor
  RESOURCE_GROUP: rg-microservice-dev
  CONTAINER_APP: ca-log-processor-dev

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      
      - name: Install dependencies and test
        run: |
          cd log-message-processor
          pip install -r requirements.txt
          python -c "import main; print('Syntax check passed')" || echo "No main.py found or syntax error"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Log in to Azure Container Registry
        run: |
          az acr login --name acrmicroserviceappdeva6b3d4b9
      
      - name: Build and push Docker image
        run: |
          cd log-message-processor
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG
          
          # Also tag as latest for convenience
          docker tag $IMAGE_TAG ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
      
      - name: Deploy to Azure Container Apps
        run: |
          IMAGE_TAG="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
          az containerapp update \
            --name ${{ env.CONTAINER_APP }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --image $IMAGE_TAG
